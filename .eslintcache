[{"C:\\Users\\DanielLindsey\\Desktop\\Epicodus\\React\\react-quiz\\src\\index.js":"1","C:\\Users\\DanielLindsey\\Desktop\\Epicodus\\React\\react-quiz\\src\\App.js":"2","C:\\Users\\DanielLindsey\\Desktop\\Epicodus\\React\\react-quiz\\src\\components\\QuizView.js":"3","C:\\Users\\DanielLindsey\\Desktop\\Epicodus\\React\\react-quiz\\src\\components\\StartPage.js":"4","C:\\Users\\DanielLindsey\\Desktop\\Epicodus\\React\\react-quiz\\src\\components\\Question.js":"5"},{"size":164,"mtime":1661983595232,"results":"6","hashOfConfig":"7"},{"size":551,"mtime":1662587518185,"results":"8","hashOfConfig":"7"},{"size":2572,"mtime":1662586566036,"results":"9","hashOfConfig":"7"},{"size":269,"mtime":1662586990832,"results":"10","hashOfConfig":"7"},{"size":1047,"mtime":1662587307700,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"z6mzy",{"filePath":"15","messages":"16","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"17","messages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"14"},{"filePath":"20","messages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"22","messages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\DanielLindsey\\Desktop\\Epicodus\\React\\react-quiz\\src\\index.js",[],["24","25"],"C:\\Users\\DanielLindsey\\Desktop\\Epicodus\\React\\react-quiz\\src\\App.js",[],"C:\\Users\\DanielLindsey\\Desktop\\Epicodus\\React\\react-quiz\\src\\components\\QuizView.js",["26"],"import React from 'react'\nimport Question from './Question'\nimport { v4 as uuidv4 } from 'uuid';\n\nconst QuizView = () => {\n\n  const fetchQuestions = async () => {\n\n    const results = await\n      fetch(\"https://opentdb.com/api.php?amount=5&difficulty=easy&type=multiple\")\n        .then(res => res.json())\n        .then(results => results.results)\n\n    return results.map(question => {\n\n      const possibleAnswers = [...question.incorrect_answers, question.correct_answer].sort()\n\n      return {\n        id: uuidv4(),\n        q: question.question,\n        a1: possibleAnswers[0],\n        a2: possibleAnswers[1],\n        a3: possibleAnswers[2],\n        a4: possibleAnswers[3],\n        answer: question.correct_answer,\n        selected: null,\n        correct: null\n      }\n    })\n  }\n\n  const [buttonText, setButtonText] = React.useState(\"Check Answers\")\n  const [questionAndAnswers, setQuestionAndAnswers] = React.useState([])\n\n  const updateQuestions = async () => {\n    const newSetOfQuestions = await fetchQuestions()\n    setQuestionAndAnswers(newSetOfQuestions)\n  }\n\n  React.useEffect(() => (updateQuestions()), [])\n\n  const handleSelectingAnswer = (id, guess) => {\n    setQuestionAndAnswers(prevQA => {\n      return prevQA.map(qa => (\n        qa.id !== id\n          ? qa\n          : {\n            ...qa,\n            selected: guess\n          })\n      )\n    })\n  }\n\n  const resetGame = () => {\n    updateQuestions()\n    setButtonText(\"Check Answers\")\n  }\n\n  const checkAnswers = () => {\n    setQuestionAndAnswers(prev => (\n      prev.map(aq => {\n        return aq.answer === aq[aq.selected]\n          ? {\n            ...aq,\n            correct: true\n          }\n          : {\n            ...aq,\n            correct: false\n          }\n      })\n    ))\n    setButtonText(\"Play Again\")\n  }\n\n  const handleButtonClick = () => {\n    buttonText === \"Check Answers\" ? checkAnswers() : resetGame()\n  }\n\n  console.log(questionAndAnswers)\n\n  return (\n    <div className=\"quiz-view\">\n      <div>\n        {questionAndAnswers.map((question) => (\n          <Question\n            question={question}\n            selectAnswer={handleSelectingAnswer}\n            key={question.id}\n          />\n        ))}\n      </div>\n      <div className=\"quiz-footer\">\n        {`${questionAndAnswers.filter(x => x.correct === null).length !== 5\n          ? \"You scored \" + questionAndAnswers.filter(x => x.correct === true).length + \"/5 correct answers\"\n          : \"\"}`}\n        <button onClick={() => handleButtonClick()}>{buttonText}</button>\n      </div>\n    </div>\n  )\n}\n\nexport default QuizView\n","C:\\Users\\DanielLindsey\\Desktop\\Epicodus\\React\\react-quiz\\src\\components\\StartPage.js",[],"C:\\Users\\DanielLindsey\\Desktop\\Epicodus\\React\\react-quiz\\src\\components\\Question.js",[],{"ruleId":"27","replacedBy":"28"},{"ruleId":"29","replacedBy":"30"},{"ruleId":"31","severity":1,"message":"32","line":40,"column":46,"nodeType":"33","endLine":40,"endColumn":48,"suggestions":"34"},"no-native-reassign",["35"],"no-negated-in-lhs",["36"],"react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'updateQuestions'. Either include it or remove the dependency array.","ArrayExpression",["37"],"no-global-assign","no-unsafe-negation",{"desc":"38","fix":"39"},"Update the dependencies array to be: [updateQuestions]",{"range":"40","text":"41"},[1115,1117],"[updateQuestions]"]